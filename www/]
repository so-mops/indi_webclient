<!DOCTYPE html>
<html>
	<head>
	 <meta charset="UTF-8">
	<script src="plotly/plotly-latest.min.js"></script>

	<Title> VATT4K Guidebox and Secondary</Title>
	
	<link rel="stylesheet" href="indi.css">
	<script src="//code.jquery.com/jquery-1.12.4.js"></script>
	<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
	<script src=""></script>
	<link rel="stylesheet" href="jquery-ui-1.12.1.custom/jquery-ui.min.css">
	<script src="indi/indi.js"></script>

	<script>
	function main()
	{
		var host = location.host.split(":")[0];
		var url="ws://"+host+":3001";
		INDIwebsocket(url, 'body', ["INDI-VATT-GUIDEBOX", "VATT Secondary"]);
		buildxy();
		setTimeout(idleProc, 1000);

	}	
	
	function idleProc()
	{
		var lfs_sel = "fieldset#LFS.INDIsvp"
		var ufs_sel = "fieldset#UFS.INDIsvp"
		var gfs_sel = "fieldset#GFS.INDIsvp"
		var selectors = [lfs_sel, ufs_sel, gfs_sel];
		var fwheels_ready = true;
		for(sel in selectors)
		{
			if ($(selectors[sel]).length != 1)
			{//not there yet try again soon.
				setTimeout(idleProc, 1000)
				return;
			}
		}

		//The below .each function iterates through
		// all the filter wheel switches and allows
		// you to bind a right click event to them 
		// to change their labels.
		$.each(selectors, 
		function(index, sel)
		{
			var id = $(sel).attr("id");
			$(sel).find("span.ISwitchspan").each(function(index, filter)
			{
				if(index == 0)//don't bind to clear filter 
					return;
				if(id == "GFS")//dont bind to guider fwheel
					return;
				$(filter).contextmenu(function()
				{
					var indiname=$(filter).attr('indiname')
					$("div#filter_dialog")
						.dialog({title:indiname})
						.append($("<input/>", {type:"hidden", id:indiname, class:"filter_context"}))
					
					return false;
				})
			});
		})
	}
	function postProc(INDIvp, ele)
	{
		var devselector = "div.INDIdevice#"+nosp(INDIvp.device);
		var grpselector = devselector+" div.INDIgroup#"+nosp(INDIvp.group);
		var menuselector = devselector+" ul.devmenu li ul"

		if( $(devselector).length == 0 )
		{
			$("<div/>", {id:nosp(INDIvp.device)}).addClass("INDIdevice").appendTo("#body");
		}
		if( $(grpselector).length == 0 )
		{
		/*
			if( $(menuselector).length == 0 )
			{
				$("<ul/>", 
				{
				}).addClass("devmenu").append(
				$("<li>")
					.append($("<a/>").text( "Widget List" ))
					.append( "<ul></ul>" ) )
					.prependTo( devselector ).after($("<hr/>")).menu()
			}
			$("<li/>").append($("<a/>").css({"white-space":"nowrap"}).on("click", function(event){$(grpselector).toggle()}).text( INDIvp.group )).appendTo( menuselector );
			$(menuselector).closest("ul.devmenu").menu("refresh");
		*/

			$("<div/>", {id:nosp(INDIvp.group)}).addClass("INDIgroup").appendTo(devselector)
			$(grpselector).append("<h3>"+INDIvp.group+"</h3>").controlgroup();
			console.log(INDIvp.group);
		}
		
		var oselector =  $("span[indidevice='"+INDIvp.device+"'][indiname='"+INDIvp.name+"'][indigroup='"+INDIvp.group+"']");


		if ($(oselector).length==1)
		{
			var rtn = oselector;
		}
		else if($(grpselector).length == 1 )
		{
			var rtn = grpselector;
		}
		else
		{
			var rtn = "body"
		}
		return rtn
	}

	$( function() 
	{
		$("#tabs").tabs()
	} );
	$( function() 
	{
		$("#tabs").resizable();
	} );

	function buildxy()
	{
		d3=Plotly.d3;
		line1 = [{
			x: [-90, -90, 90, 90, 50, 50, -60, -60, -90],
			y: [-10, 85, 85, -10, -10, 45, 45, -10, -10], 
			type: "line",
			hoverinfo: "none"
		}];

		layout = {
			margin: { t: 0 },
			xaxis: {range:[-100,100], fixedrange: true},
			yaxis: {range:[-70,120], fixedrange: true},
			paper_bgcolor:'rgba(0,0,0,0.5)',
            plot_bgcolor:'rgba(0,0,0,0)',
			shapes:[{
				type:"rect",
				xref:'x',
				yref:'y',
				fillcolor:'green',
				x0:0,
				y0:0,
				x1:13,
				y1:17,
				
			}]

		};
		

		UMIRROR = document.getElementById('xypos');
		Plotly.plot( UMIRROR, line1, layout);		
		var xaxis = UMIRROR._fullLayout.xaxis;
		var yaxis = UMIRROR._fullLayout.yaxis;
		var l = UMIRROR._fullLayout.margin.l;
		var t = UMIRROR._fullLayout.margin.t;

		d3.select("#xypos").on("contextmenu", function() {
				d3.event.preventDefault()
				var point = d3.mouse(this);
				p = {x: point[0]-(180), y: 100-point[1] };
				$("span#OFFSET_X.INumberspan > input.INumber_wo").val(parseInt(p.x));
				$("span#OFFSET_Y.INumberspan > input.INumber_wo").val(parseInt(p.y));
				console.log(point)
			} )
			
			
			
			UMIRROR.addEventListener("mousemove", function(evt)
			{
				var x = xaxis.p2c(evt.x - l);
				var y = yaxis.p2c(evt.y - t);
				$("span#OFFSET_X.INumberspan > input.INumber_wo").val(parseInt(x));
				$("span#OFFSET_Y.INumberspan > input.INumber_wo").val(parseInt(y));

			})
			setTimeout(updatexy, 1000);

	}

	function updatexy()
	{
		var xsel = "fieldset#OFFSET_X.INDInvp > span#OFFSET_X > span.INumber_ro"
		var ysel = "fieldset#OFFSET_Y.INDInvp > span#OFFSET_Y > span.INumber_ro"
		xpos = parseFloat($(xsel).text())
		ypos = parseFloat($(ysel).text())
		if(isNaN(xpos) || isNaN(ypos))
		{
			console.log("NO dice");
		}	
		else
		{
			console.log(xpos, ypos);
			var update={
				shapes:[{
					type:"rect",
					xref:'x',
					yref:'y',					fillcolor:'green',
	x0:xpos-(13.0/2.0),
					y0:ypos-(13.0/2.0),
					x1:xpos+(17.0/2.0),
					y1:ypos+(17.0/2.0),

				}]
			}
			
			UMIRROR = document.getElementById('xypos');
			Plotly.relayout(UMIRROR, update)
		}
		setTimeout(updatexy, 2000);
	}

	</script>
	<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/vader/jquery-ui.css">

</head>
<body>
</body>
